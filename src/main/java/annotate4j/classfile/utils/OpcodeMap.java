package annotate4j.classfile.utils;

import java.util.HashMap;
import java.util.Map;

/**
 * @author Eugene Savin
 */
public class OpcodeMap {

    private static Map<Byte, String> map = new HashMap<Byte, String>();

    public static String get(byte b) {
        return map.get(b);
    }

    static {
        map.put((byte) 0x00, "nop");
        map.put((byte) 0x01, "aconst_null");
        map.put((byte) 0x02, "iconst_m1");
        map.put((byte) 0x03, "iconst_0");
        map.put((byte) 0x04, "iconst_1");
        map.put((byte) 0x05, "iconst_2");
        map.put((byte) 0x06, "iconst_3");
        map.put((byte) 0x07, "iconst_4");
        map.put((byte) 0x08, "iconst_5");
        map.put((byte) 0x09, "lconst_0");
        map.put((byte) 0x0a, "lconst_1");
        map.put((byte) 0x0b, "fconst_0");
        map.put((byte) 0x0c, "fconst_1");
        map.put((byte) 0x0d, "fconst_2");
        map.put((byte) 0x0e, "dconst_0");
        map.put((byte) 0x0f, "dconst_1");
        map.put((byte) 0x10, "bipush");
        map.put((byte) 0x11, "sipush");
        map.put((byte) 0x12, "ldc");
        map.put((byte) 0x13, "ldc_w");
        map.put((byte) 0x14, "ldc2_w");
        map.put((byte) 0x15, "iload");
        map.put((byte) 0x16, "lload");
        map.put((byte) 0x17, "fload");
        map.put((byte) 0x18, "dload");
        map.put((byte) 0x19, "aload");
        map.put((byte) 0x1a, "iload_0");
        map.put((byte) 0x1b, "iload_1");
        map.put((byte) 0x1c, "iload_2");
        map.put((byte) 0x1d, "iload_3");
        map.put((byte) 0x1e, "lload_0");
        map.put((byte) 0x1f, "lload_1");
        map.put((byte) 0x20, "lload_2");
        map.put((byte) 0x21, "lload_3");
        map.put((byte) 0x22, "fload_0");
        map.put((byte) 0x23, "fload_1");
        map.put((byte) 0x24, "fload_2");
        map.put((byte) 0x25, "fload_3");
        map.put((byte) 0x26, "dload_0");
        map.put((byte) 0x27, "dload_1");
        map.put((byte) 0x28, "dload_2");
        map.put((byte) 0x29, "dload_3");
        map.put((byte) 0x2a, "aload_0");
        map.put((byte) 0x2b, "aload_1");
        map.put((byte) 0x2c, "aload_2");
        map.put((byte) 0x2d, "aload_3");
        map.put((byte) 0x2e, "iaload");
        map.put((byte) 0x2f, "laload");
        map.put((byte) 0x30, "faload");
        map.put((byte) 0x31, "daload");
        map.put((byte) 0x32, "aaload");
        map.put((byte) 0x33, "baload");
        map.put((byte) 0x34, "caload");
        map.put((byte) 0x35, "saload");
        map.put((byte) 0x36, "istore");
        map.put((byte) 0x37, "lstore");
        map.put((byte) 0x38, "fstore");
        map.put((byte) 0x39, "dstore");
        map.put((byte) 0x3a, "astore");
        map.put((byte) 0x3b, "istore_0");
        map.put((byte) 0x3c, "istore_1");
        map.put((byte) 0x3d, "istore_2");
        map.put((byte) 0x3e, "istore_3");
        map.put((byte) 0x3f, "lstore_0");
        map.put((byte) 0x40, "lstore_1");
        map.put((byte) 0x41, "lstore_2");
        map.put((byte) 0x42, "lstore_3");
        map.put((byte) 0x43, "fstore_0");
        map.put((byte) 0x44, "fstore_1");
        map.put((byte) 0x45, "fstore_2");
        map.put((byte) 0x46, "fstore_3");
        map.put((byte) 0x47, "dstore_0");
        map.put((byte) 0x48, "dstore_1");
        map.put((byte) 0x49, "dstore_2");
        map.put((byte) 0x4a, "dstore_3");
        map.put((byte) 0x4b, "astore_0");
        map.put((byte) 0x4c, "astore_1");
        map.put((byte) 0x4d, "astore_2");
        map.put((byte) 0x4e, "astore_3");
        map.put((byte) 0x4f, "iastore");
        map.put((byte) 0x50, "lastore");
        map.put((byte) 0x51, "fastore");
        map.put((byte) 0x52, "dastore");
        map.put((byte) 0x53, "aastore");
        map.put((byte) 0x54, "bastore");
        map.put((byte) 0x55, "castore");
        map.put((byte) 0x56, "sastore");
        map.put((byte) 0x57, "pop");
        map.put((byte) 0x58, "pop2");
        map.put((byte) 0x59, "dup");
        map.put((byte) 0x5a, "dup_x1");
        map.put((byte) 0x5b, "dup_x2");
        map.put((byte) 0x5c, "dup2");
        map.put((byte) 0x5d, "dup2_x1");
        map.put((byte) 0x5e, "dup2_x2");
        map.put((byte) 0x5f, "swap");
        map.put((byte) 0x60, "iadd");
        map.put((byte) 0x61, "ladd");
        map.put((byte) 0x62, "fadd");
        map.put((byte) 0x63, "dadd");
        map.put((byte) 0x64, "isub");
        map.put((byte) 0x65, "lsub");
        map.put((byte) 0x66, "fsub");
        map.put((byte) 0x67, "dsub");
        map.put((byte) 0x68, "imul");
        map.put((byte) 0x69, "lmul");
        map.put((byte) 0x6a, "fmul");
        map.put((byte) 0x6b, "dmul");
        map.put((byte) 0x6c, "idiv");
        map.put((byte) 0x6d, "ldiv");
        map.put((byte) 0x6e, "fdiv");
        map.put((byte) 0x6f, "ddiv");
        map.put((byte) 0x70, "irem");
        map.put((byte) 0x71, "lrem");
        map.put((byte) 0x72, "frem");
        map.put((byte) 0x73, "drem");
        map.put((byte) 0x74, "ineg");
        map.put((byte) 0x75, "lneg");
        map.put((byte) 0x76, "fneg");
        map.put((byte) 0x77, "dneg");
        map.put((byte) 0x78, "ishl");
        map.put((byte) 0x79, "lshl");
        map.put((byte) 0x7a, "ishr");
        map.put((byte) 0x7b, "lshr");
        map.put((byte) 0x7c, "iushr");
        map.put((byte) 0x7d, "lushr");
        map.put((byte) 0x7e, "iand");
        map.put((byte) 0x7f, "land");
        map.put((byte) 0x80, "ior");
        map.put((byte) 0x81, "lor");
        map.put((byte) 0x82, "ixor");
        map.put((byte) 0x83, "lxor");
        map.put((byte) 0x84, "iinc");
        map.put((byte) 0x85, "i2l");
        map.put((byte) 0x86, "i2f");
        map.put((byte) 0x87, "i2d");
        map.put((byte) 0x88, "l2i");
        map.put((byte) 0x89, "l2f");
        map.put((byte) 0x8a, "l2d");
        map.put((byte) 0x8b, "f2i");
        map.put((byte) 0x8c, "f2l");
        map.put((byte) 0x8d, "f2d");
        map.put((byte) 0x8e, "d2i");
        map.put((byte) 0x8f, "d2l");
        map.put((byte) 0x90, "d2f");
        map.put((byte) 0x91, "i2b");
        map.put((byte) 0x92, "i2c");
        map.put((byte) 0x93, "i2s");
        map.put((byte) 0x94, "lcmp");
        map.put((byte) 0x95, "fcmpl");
        map.put((byte) 0x96, "fcmpg");
        map.put((byte) 0x97, "dcmpl");
        map.put((byte) 0x98, "dcmpg");
        map.put((byte) 0x99, "ifeq");
        map.put((byte) 0x9a, "ifne");
        map.put((byte) 0x9b, "iflt");
        map.put((byte) 0x9c, "ifge");
        map.put((byte) 0x9d, "ifgt");
        map.put((byte) 0x9e, "ifle");
        map.put((byte) 0x9f, "if_icmpeq");
        map.put((byte) 0xa0, "if_icmpne");
        map.put((byte) 0xa1, "if_icmplt");
        map.put((byte) 0xa2, "if_icmpge");
        map.put((byte) 0xa3, "if_icmpgt");
        map.put((byte) 0xa4, "if_icmple");
        map.put((byte) 0xa5, "if_acmpeq");
        map.put((byte) 0xa6, "if_acmpne");
        map.put((byte) 0xa7, "goto");
        map.put((byte) 0xa8, "jsr");
        map.put((byte) 0xa9, "ret");
        map.put((byte) 0xaa, "tableswitch");
        map.put((byte) 0xab, "lookupswitch");
        map.put((byte) 0xac, "ireturn");
        map.put((byte) 0xad, "lreturn");
        map.put((byte) 0xae, "freturn");
        map.put((byte) 0xaf, "dreturn");
        map.put((byte) 0xb0, "areturn");
        map.put((byte) 0xb1, "return");
        map.put((byte) 0xb2, "getstatic");
        map.put((byte) 0xb3, "putstatic");
        map.put((byte) 0xb4, "getfield");
        map.put((byte) 0xb5, "putfield");
        map.put((byte) 0xb6, "invokevirtual");
        map.put((byte) 0xb7, "invokespecial");
        map.put((byte) 0xb8, "invokestatic");
        map.put((byte) 0xb9, "invokeinterface");
        map.put((byte) 0xba, "xxxunusedxxx1");
        map.put((byte) 0xbb, "new");
        map.put((byte) 0xbc, "newarray");
        map.put((byte) 0xbd, "anewarray");
        map.put((byte) 0xbe, "arraylength");
        map.put((byte) 0xbf, "athrow");
        map.put((byte) 0xc0, "checkcast");
        map.put((byte) 0xc1, "instanceof");
        map.put((byte) 0xc2, "monitorenter");
        map.put((byte) 0xc3, "monitorexit");
        map.put((byte) 0xc4, "wide");
        map.put((byte) 0xc5, "multianewarray");
        map.put((byte) 0xc6, "ifnull");
        map.put((byte) 0xc7, "ifnonnull");
        map.put((byte) 0xc8, "goto_w");
        map.put((byte) 0xc9, "jsr_w");
        map.put((byte) 0xca, "breakpoint");
        map.put((byte) 0xfe, "impdep1");
        map.put((byte) 0xff, "impdep2");
    }
}
